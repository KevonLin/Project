/*
 	关于Java语言中的方法：
 	
 		1、方法怎么定义，语法结构：
 		
 			[修饰符列表] 返回值类型 方法名(形式参数列表){
 				方法体;
 			}
 		
 		2、对以上的语法结构进行解释说明
 			2.1、关于修饰符列表
 				*可选项，不是必须的
 				*目前携程：public static【以后将】
 				*方法的修饰符列表中"有static关键字"的h话，怎么调用这个方法？
 					-类名.方法名(实际参数列表);
 					
 			2.2、返回值类型
 				*什么是返回值？
 					一个方法可以完成某个特定共嗯，功能结束后大多数需要返回最终执行结果
 					执行结果k可能是一个具体存在的数据
 					而这个具体存在的数据就是返回值
 				*返回值类型？
 					返回值是一个具体存在的数据，数据都有类型，此处需要指定返回值的具体类型
 				
 				*返回值类型都可以指定哪些类型
 					Java任意一种类型豆可以，包括基本数据类型和所有的引用数据类型
 				
 				*也可能这个方法执行结束之后不返回任何数据，Java中规定，当一个方法执行
 				之后不返回任何数据的话，返回值类型必须编写：void关键字。
 				
 				*返回值类型可以是
 					byte,short,int,long,float,double,boolean,char,String,void
 				
 				*返回值类型若不是void，表示这个方法执行结束之后必须返回一个具体的值
 				当发发执行结束的时候没有返回任何数据的话，编译器报错。
 				
 				return 数值; 要求“值”的数据类型必须和“方法的返回值类型”一直，不然编译器报错
 				
 				*返回值类型是void的时候，在方法体中不能编写“return 值;”这样的语句
 				
 				*只要带有return关键字的语句执行，return语句所在的方法结束。【不是JVM结束，是所在的方法结束】
 				
 			2.3、方法名：
 				*只要是合法的标识符就行
 				*方法名最好见名知意
 				*方法名最好是动词
 				*方法名首字母要求小写，遵守驼峰命名方式
 			
 			2.4、形式参数列表：简称形参
 				*形参是局部变量：int a; double b; float c;String s;...
 				*形参的个数可以是0~n个
 				*多个形参之间用“逗号”隔开
 				*形参中起决定性作用的是形参的参数类型，形参的名字就是局部变量的名字。
 				*方法在调用的时候，实际给这个方法传递d的真实s数据被称为：实际参数，简称实参
 				*实参列表和形参列表必须满足：
 					-数量相同
 					-类型对应相同
 				例如：
 					public static int num(String a,int 合法的标识符就行){//(int a,int b)是形参列表
 					}
 					方法调用
 					sun("abc","def");编译报错
 					sum("10",20);//("10",20)是实参列表
 			
 			2.5、方法体必须右大括号括起来，方法体中的代码有顺序，遵循自上而下的顺序执行
 			并且方法体有Java语句构成
 		
 		3、方法怎么调用？
 			方法之定义不去调用时不会执行
 			语法规则：《方法的修饰符列表中有static》
 				类名.方法名(实参列表);<这是一条Java语句，表示调用某个各类的某个方法，传递这样的实参>
 					
 */
public class MethodTest03 {//表示定义一个公开的类，起名MethodTest03，因为是公开的类，所以y源文件名必须与其相同
	//类体
	//类体中不能直接编写Java语句，除声明变量以外
	//方法出现在类体中
	
	//方法
	//public表示公开的
	//static表示静态的
	//void表示犯法执行结束之后不反回任何数据
	//(String[] args) 形式参数列表，其中String[]是一种引用数据类型，args是一个局部变量的变量名
	
	
	public static void main(String[] args) {
		
		//这里的程序是一定会执行的
		//main方法是JVM负责调用的
		//调用方法(方法中必须有static)：	类名.方法名
		//调用MethodTest03的sum方法，传递两个实参
		
		MethodTest03.sum(10,20);//到这里main方法暂停，进入sum方法
		
		//注意：方法体中的代码是有顺的，遵循自上而下的顺序依次执行
		
		int a = 100;
		MethodTest03.sum(a,500);
		
		int k = 90;
		int f = 10;
		MethodTest03.sum(k,f);
		
	}


	
	//自定义方法，不是程序的入口
	//方法作用：计算两个int类型数据的和，不要求返回结果，但要求结果输出到控制台
	//修饰符列表：public static
	//返回值类型：void
	//方法名：sum
	//形式参数列表:(int x,int y)
	//方法体：主要任务是求和之后输出计算结果
	
	public static void sum(int i,int j) {
		System.out.println(i + " + " + j + " = " + (i+j));
	}
	
}
